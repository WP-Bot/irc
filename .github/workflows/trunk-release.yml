# Automatically create a release whenever a version-tag is created.
name: Publish release

on:
  workflow_dispatch:

  repository_dispatch:
    types: trigger-deploy

  push:
    tags:
      - '*'

jobs:
  build:
    name: Create release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: PHP Syntax check
        working-directory: ./
        run: find . \( -name '*.php' \) -exec php -lf {} \;

      - name: Set up composer
        working-directory: ./
        run: composer install

      - name: Remove development files
        working-directory: ./
        run: |
          rm -rf .docker
          rm -rf .editorconfig
          rm -rf .github
          rm -rf composer.*
          rm -rf docker-compose.yml
          rm -rf config-example.php

      - name: Set up SSH Auth
        working-directory: ./
        run: |
          echo "::group::Setup Auth Keys"
          mkdir ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" >> ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "::endgroup::"

          echo "::group::Pre-approve rsync destination"
          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} > ~/.ssh/known_hosts
          echo "::endgroup::"

      - name: Push files to server
        working-directory: ./
        run: |
          echo "::group::RSync files"
          rsync -a ./ ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:${{ secrets.DEPLOY_PATH }}
          echo "::endgroup::"

      - name: Run post-deploy script
        working-directory: ./
        run: |
          echo "::group::Run default priority post-deploy script"
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "killall php"
          echo "::endgroup::"
